/*
 * 
 */

package com.hyr.webserviceimpl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import com.hyr.webservice.HelloWebService;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.0 Mon Oct 19 14:31:54 CST 2015
 * Generated source version: 2.3.0
 * 
 */

@WebServiceClient(name = "helloWebServiceImpl", wsdlLocation = "http://127.0.0.1/webservice?wsdl", targetNamespace = "http://webserviceImpl.hyr.com/")
public class HelloWebServiceImpl extends Service
{

	public final static URL WSDL_LOCATION;
	public final static QName SERVICE = new QName(
			"http://webserviceImpl.hyr.com/", "helloWebServiceImpl");
	public final static QName HelloWebServiceImplPort = new QName(
			"http://webserviceImpl.hyr.com/", "HelloWebServiceImplPort");
	static
	{
		URL url = null;
		try
		{
			url = new URL("http://127.0.0.1/webservice?wsdl");
		} catch (MalformedURLException e)
		{
			System.err
					.println("Can not initialize the default wsdl from http://127.0.0.1/webservice?wsdl");
			// e.printStackTrace();
		}
		WSDL_LOCATION = url;
	}

	public HelloWebServiceImpl(URL wsdlLocation)
	{
		super(wsdlLocation, SERVICE);
	}

	public HelloWebServiceImpl(URL wsdlLocation, QName serviceName)
	{
		super(wsdlLocation, serviceName);
	}

	public HelloWebServiceImpl()
	{
		super(WSDL_LOCATION, SERVICE);
	}

	public HelloWebServiceImpl(WebServiceFeature... features)
	{
		super(WSDL_LOCATION, SERVICE, features);
	}

	public HelloWebServiceImpl(URL wsdlLocation, WebServiceFeature... features)
	{
		super(wsdlLocation, SERVICE, features);
	}

	public HelloWebServiceImpl(URL wsdlLocation, QName serviceName,
			WebServiceFeature... features)
	{
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns HelloWebService
	 */
	@WebEndpoint(name = "HelloWebServiceImplPort")
	public HelloWebService getHelloWebServiceImplPort()
	{
		return super.getPort(HelloWebServiceImplPort, HelloWebService.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns HelloWebService
	 */
	@WebEndpoint(name = "HelloWebServiceImplPort")
	public HelloWebService getHelloWebServiceImplPort(
			WebServiceFeature... features)
	{
		return super.getPort(HelloWebServiceImplPort, HelloWebService.class,
				features);
	}

}
